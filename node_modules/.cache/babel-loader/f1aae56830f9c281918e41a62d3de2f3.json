{"ast":null,"code":"var _jsxFileName = \"/Users/altonong/Desktop/Codes/react-app/Stomble_internproj/src/components/projects/cards/cards.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider, Avatar, Container } from '@material-ui/core';\nimport { deepOrange } from '@material-ui/core/colors';\nconst useStyles = makeStyles(theme => ({\n  dividerStyle: {\n    marginBottom: '1rem',\n    marginTop: '1rem'\n  },\n  headerStyles: {\n    fontSize: '1.7rem',\n    marginLeft: '-3%'\n  },\n  paragraphStyles: {\n    marginBottom: '1rem'\n  },\n  avatarStyles: {\n    // flex: '1',\n    fontSize: '1.5rem',\n    marginLeft: 'auto',\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500]\n  },\n  inlineFlexContent: {\n    display: \"flex\"\n  }\n}));\nconst cardInfo = [{\n  projectName: 'G20 Text Analysis',\n  projectClass: 'D',\n  projectDescription: \"This was an extremely interesting project that involved the use of Python's amazing Pandas framework. The goal of this project was to analyse what was going on during the G20 world summit. It was easy and very possible to to get the general idea of the topics that were discussed by reading one or two news articles but how about thousands of articles? This is where it gets intersting...\"\n}];\n\nconst ProjectCard = () => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: classes.inlineFlexContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerStyles,\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"G20 Text Analysis\"), /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatarStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"D\")), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.dividerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h2\",\n    className: classes.paragraphStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"What were the goals of this project?\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.paragraphStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"There were many ways of understanding news articles, one could be simply reading newspapers, blogging about it online or even talking about it with your peers. What we wanted to do was the analyse thousands of different articles from different sources and this was when programming really came in handy.\")), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Learn More\")));\n};\n\nexport default ProjectCard;","map":{"version":3,"sources":["/Users/altonong/Desktop/Codes/react-app/Stomble_internproj/src/components/projects/cards/cards.js"],"names":["React","makeStyles","Card","CardActions","CardContent","Button","Typography","Divider","Avatar","Container","deepOrange","useStyles","theme","dividerStyle","marginBottom","marginTop","headerStyles","fontSize","marginLeft","paragraphStyles","avatarStyles","color","palette","getContrastText","backgroundColor","inlineFlexContent","display","cardInfo","projectName","projectClass","projectDescription","ProjectCard","classes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,OAAR,EAAiBC,MAAjB,EAAyBC,SAAzB,QAAyC,mBAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAGA,MAAMC,SAAS,GAAGV,UAAU,CAACW,KAAK,KAAK;AACnCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,YAAY,EAAE,MADJ;AAEVC,IAAAA,SAAS,EAAE;AAFD,GADqB;AAKnCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,QADA;AAEVC,IAAAA,UAAU,EAAE;AAFF,GALqB;AASnCC,EAAAA,eAAe,EAAE;AACbL,IAAAA,YAAY,EAAE;AADD,GATkB;AAYnCM,EAAAA,YAAY,EAAE;AACV;AACAH,IAAAA,QAAQ,EAAE,QAFA;AAGVC,IAAAA,UAAU,EAAE,MAHF;AAIVG,IAAAA,KAAK,EAAET,KAAK,CAACU,OAAN,CAAcC,eAAd,CAA8Bb,UAAU,CAAC,GAAD,CAAxC,CAJG;AAKVc,IAAAA,eAAe,EAAEd,UAAU,CAAC,GAAD;AALjB,GAZqB;AAmBnCe,EAAAA,iBAAiB,EAAE;AACfC,IAAAA,OAAO,EAAE;AADM;AAnBgB,CAAL,CAAN,CAA5B;AAwBA,MAAMC,QAAQ,GAAG,CACb;AACIC,EAAAA,WAAW,EAAE,mBADjB;AAEIC,EAAAA,YAAY,EAAE,GAFlB;AAGIC,EAAAA,kBAAkB,EAAE;AAHxB,CADa,CAAjB;;AAQA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEqB,OAAO,CAACP,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEO,OAAO,CAAChB,YAA/B;AAA6C,IAAA,OAAO,EAAC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAII,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEgB,OAAO,CAACZ,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CADJ,eAOA,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEY,OAAO,CAACnB,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,eAQA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAwC,IAAA,SAAS,EAAEmB,OAAO,CAACb,eAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CARA,eAWA,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAGa,OAAO,CAACb,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uTAXA,CADJ,eAmDI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,CAnDJ,CADJ;AAyDH,CA3DD;;AA6DA,eAAeY,WAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Divider, Avatar, Container} from '@material-ui/core';\nimport { deepOrange } from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles(theme => ({\n    dividerStyle: {\n        marginBottom: '1rem',\n        marginTop: '1rem'\n    },\n    headerStyles: {\n        fontSize: '1.7rem',\n        marginLeft: '-3%'\n    },\n    paragraphStyles: {\n        marginBottom: '1rem'\n    },\n    avatarStyles: {\n        // flex: '1',\n        fontSize: '1.5rem',\n        marginLeft: 'auto',\n        color: theme.palette.getContrastText(deepOrange[500]),\n        backgroundColor: deepOrange[500]\n    },\n    inlineFlexContent: {\n        display: \"flex\"\n    },\n  }));\n  \nconst cardInfo = [\n    {\n        projectName: 'G20 Text Analysis',\n        projectClass: 'D',\n        projectDescription: \"This was an extremely interesting project that involved the use of Python's amazing Pandas framework. The goal of this project was to analyse what was going on during the G20 world summit. It was easy and very possible to to get the general idea of the topics that were discussed by reading one or two news articles but how about thousands of articles? This is where it gets intersting...\",\n    }\n]\n\nconst ProjectCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Container className={classes.inlineFlexContent}>\n                    <Typography className={classes.headerStyles} variant=\"h4\">\n                        G20 Text Analysis\n                    </Typography>\n                    <Avatar className={classes.avatarStyles}>D</Avatar>\n                </Container>\n            <Divider className={classes.dividerStyle}/>\n            <Typography variant=\"h6\" component=\"h2\" className={classes.paragraphStyles}>\n                What were the goals of this project?\n            </Typography>\n            <Typography className ={classes.paragraphStyles}>\n                There were many ways of understanding news articles, one could be simply reading newspapers, blogging about it online or even talking about it with your peers. What we wanted to do was the analyse thousands of different articles from different sources and this was when programming really came in handy.\n            </Typography>\n\n            {/* <Typography variant=\"h6\" className = {classes.paragraphStyles}>\n                Steps we took:\n            </Typography> */}\n            {/* <Typography variant=\"h6\">\n                Loop through the project steps and call them back in a way that is presentable\n                1. Call API to collect news articles from new outlets.\n                <br/>\n                <br/>\n                2. Store and sort all the collected data to a Pandas framework.\n                <br/>\n                <br/>\n                3. Sorted and filtered unnecessary data\n                <br/>\n                <br/>\n                4. Extracted each word from each article and appended to an array\n                <br/>\n                <br/>\n                5. Removed all duplicate and unnecessary words\n                <br/>\n                <br/>\n                6. Generated word cloud with the most common \"topic\" words\n                <br/>\n                <br/>\n                7. Sentiment analysis on every word reported\n                <br/>\n                <br/>\n                8. Plot with matplot.lib the overall compound score\n                <br/>\n                <br/>\n            </Typography> */}\n\n            {/* <Typography>\n                If you're interested to find out more about the success and flow of this project, hit me up at my contacts page!\n            </Typography> */}\n            </CardContent>\n            <CardActions>\n            <Button size=\"small\">Learn More</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default ProjectCard;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/altonong/Desktop/Codes/react-app/Stomble_internproj/src/components/intranet/Intranet.js\";\nimport React, { Component } from 'react';\nimport { Box, Grid, Card, CardActionArea, CardHeader, CardActions, CardContent, CardMedia, Button, Typography, List, ListItem, Divider, ListItemText, ListItemAvatar, Avatar, TextField, IconButton } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Navbar from '../navbar/navbar';\nimport Typed from 'react-typed';\nimport DoneAllOutlinedIcon from '@material-ui/icons/DoneAllOutlined';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport person1 from './avatar/robbie.png';\nimport { connect } from 'react-redux';\nimport * as actionTypes from './store/redux/types';\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    backgroundColor: '#ecf0f1',\n    height: '100%',\n    paddingTop: '2rem',\n    color: '#34495e'\n  },\n  headerContainer: {\n    textAlign: 'center',\n    backgroundColor: '#fa923f',\n    color: 'white',\n    padding: '0.5rem 0'\n  },\n  header: {\n    fontSize: '2.3rem'\n  },\n  mainContent: {\n    height: '100%',\n    marginLeft: '1rem'\n  },\n  teamContainer: {\n    margin: '1rem 2rem'\n  },\n  inline: {\n    display: 'inline'\n  },\n  mainContainer2: {\n    backgroundColor: 'white'\n  },\n  cardContainer: {\n    margin: '3rem auto'\n  },\n  employeeCard: {\n    display: 'inline-flex',\n    width: '100%',\n    padding: '1rem',\n    backgroundColor: '#ecf0f1',\n    color: '#34495e',\n    marginBottom: '1rem'\n  },\n  cardAvatar: {\n    width: theme.spacing(6),\n    height: theme.spacing(6)\n  },\n  personName: {\n    marginTop: '0.4rem',\n    marginLeft: '1.5rem'\n  },\n  attendenceButtons: {\n    marginLeft: 'auto',\n    marginTop: '0.4rem',\n    marginRight: '1rem'\n  },\n  individualButton: {\n    marginRight: '1rem',\n    '&:active': {\n      backgroundColor: '#2ecc71',\n      color: 'white'\n    }\n  },\n  counter: {\n    marginLeft: '1rem'\n  },\n  addTeamMemberButton: {\n    margin: '1rem 0.5rem',\n    '&:hover': {\n      backgroundColor: '#34495e',\n      color: 'white'\n    }\n  },\n  addTeamMemberButtonIcon: {\n    marginLeft: '1rem'\n  }\n})); // const InputField = withStyles({\n//     root: {\n//         '& label.Mui-focused': {\n//             color: 'tomato',\n//         },\n//         '& label': {\n//             color: 'tan'\n//         },\n//         '& .MuiOutlinedInput-root': {\n//             '& fieldset': {\n//                 borderColor: 'tan'\n//             },\n//             '&:hover fieldset': {\n//                 borderColor: 'tan'\n//             },\n//             '& .Mui-focused fieldset': {\n//                 borderColor: 'tan'\n//             }\n//         },\n//     },\n// })(TextField);\n\nconst classes = useStyles();\n\nclass Intranet extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: ['Alton', 'David', 'Steph'],\n      attendence: [true, true, false]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      component: \"header\",\n      className: classes.headerContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typed, {\n      strings: ['Welcome to the Team Manager!', 'Find out everything to do today!'],\n      typeSpeed: 40,\n      backSpeed: 60,\n      loop: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Box, {\n      component: \"div\",\n      className: classes.mainContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.cardContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      title: \"Team 1 Attendence\",\n      subheader: \"21st Aug 2020\",\n      action: /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 105\n        }\n      }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 139\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      className: classes.employeeCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"dev1\",\n      src: person1,\n      className: classes.cardAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      className: classes.personName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, \"Alton Ong\"), /*#__PURE__*/React.createElement(Box, {\n      className: classes.attendenceButtons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.individualButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DoneAllOutlinedIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: classes.individualButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ClearIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 45\n      }\n    })))), /*#__PURE__*/React.createElement(Box, {\n      className: classes.counter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, \"Total working today: 10\"), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, \"Total absent today: 10\"), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, \"Total missing: 10\"), /*#__PURE__*/React.createElement(Button, {\n      className: classes.addTeamMemberButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 37\n      }\n    }, \"Add Team Member \", /*#__PURE__*/React.createElement(AddCircleIcon, {\n      className: classes.addTeamMemberButtonIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 101\n      }\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    count: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    //This function will be avaliable through this property therefore whenever this property is executed then this dispatch is also gonna be executed\n    onIncrementCounter: () => dispatch({\n      type: actionTypes.INCREMENT\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Intranet);","map":{"version":3,"sources":["/Users/altonong/Desktop/Codes/react-app/Stomble_internproj/src/components/intranet/Intranet.js"],"names":["React","Component","Box","Grid","Card","CardActionArea","CardHeader","CardActions","CardContent","CardMedia","Button","Typography","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","TextField","IconButton","makeStyles","withStyles","SendIcon","ClearIcon","MoreVertIcon","Navbar","Typed","DoneAllOutlinedIcon","AddCircleIcon","person1","connect","actionTypes","useStyles","theme","mainContainer","backgroundColor","height","paddingTop","color","headerContainer","textAlign","padding","header","fontSize","mainContent","marginLeft","teamContainer","margin","inline","display","mainContainer2","cardContainer","employeeCard","width","marginBottom","cardAvatar","spacing","personName","marginTop","attendenceButtons","marginRight","individualButton","counter","addTeamMemberButton","addTeamMemberButtonIcon","classes","Intranet","state","name","attendence","render","mapStateToProps","count","mapDispatchToProps","dispatch","onIncrementCounter","type","INCREMENT"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Box, Grid, Card, CardActionArea, CardHeader, CardActions, CardContent, CardMedia, Button, Typography, List, ListItem, Divider, ListItemText, ListItemAvatar, Avatar, TextField, IconButton} from '@material-ui/core' \nimport {makeStyles, withStyles} from '@material-ui/core/styles'\nimport SendIcon from '@material-ui/icons/Send';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport Navbar from '../navbar/navbar'\nimport Typed  from 'react-typed';\nimport DoneAllOutlinedIcon from '@material-ui/icons/DoneAllOutlined';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport person1 from './avatar/robbie.png'\nimport { connect } from 'react-redux';\nimport * as actionTypes from './store/redux/types'\n\n\nconst useStyles = makeStyles((theme) => ({\n    mainContainer: {\n        backgroundColor: '#ecf0f1',\n        height: '100%',\n        paddingTop: '2rem',\n        color: '#34495e'\n    },\n    headerContainer: {\n        textAlign: 'center',\n        backgroundColor: '#fa923f',\n        color: 'white',\n        padding: '0.5rem 0'\n    },\n    header: {\n        fontSize: '2.3rem'\n    },\n    mainContent: {\n        height: '100%',\n        marginLeft: '1rem'\n    },\n    teamContainer: {\n        margin: '1rem 2rem'\n    },\n    inline: {\n        display: 'inline'\n    },\n    mainContainer2: {\n        backgroundColor: 'white'\n    },\n    cardContainer: {\n        margin: '3rem auto'\n    },\n    employeeCard: {\n        display: 'inline-flex',\n        width: '100%',\n        padding: '1rem',\n        backgroundColor: '#ecf0f1',\n        color: '#34495e',\n        marginBottom: '1rem'\n        \n    },\n    cardAvatar: {\n        width: theme.spacing(6),\n        height: theme.spacing(6)\n    },\n    personName: {\n        marginTop: '0.4rem',\n        marginLeft: '1.5rem'\n    },\n    attendenceButtons: {\n        marginLeft: 'auto',\n        marginTop: '0.4rem',\n        marginRight: '1rem',\n        \n    },\n    individualButton: {\n        marginRight: '1rem',\n        '&:active': {\n            backgroundColor: '#2ecc71',\n            color:'white'\n        }\n    },\n    counter: {\n        marginLeft: '1rem'\n    },\n    addTeamMemberButton: {\n        margin: '1rem 0.5rem',\n        '&:hover': {\n            backgroundColor: '#34495e',\n            color: 'white'\n        }\n    },\n    addTeamMemberButtonIcon: {\n        marginLeft: '1rem'\n    }\n}))\n// const InputField = withStyles({\n//     root: {\n//         '& label.Mui-focused': {\n//             color: 'tomato',\n//         },\n//         '& label': {\n//             color: 'tan'\n//         },\n//         '& .MuiOutlinedInput-root': {\n//             '& fieldset': {\n//                 borderColor: 'tan'\n//             },\n//             '&:hover fieldset': {\n//                 borderColor: 'tan'\n//             },\n//             '& .Mui-focused fieldset': {\n//                 borderColor: 'tan'\n//             }\n//         },\n        \n\n//     },\n// })(TextField);\n\n\nconst classes = useStyles();\nclass Intranet extends Component {\n    state = {\n        name: ['Alton', 'David', 'Steph'],\n        attendence: [true, true, false]\n    }\n    \n    render() {\n        return (\n            <>\n                <Navbar/>\n                    <Box component='header' className={classes.headerContainer}>\n                        <Typography className={classes.header}>\n                            <Typed strings={['Welcome to the Team Manager!', 'Find out everything to do today!']} typeSpeed={40} backSpeed={60} loop/>\n                        </Typography>\n                    </Box>\n                <Box component='div' className={classes.mainContainer}>\n                    <Grid container justify='center'>\n                        <Grid item lg={5}>\n                            <Card className={classes.cardContainer}>\n                                <CardHeader title='Team 1 Attendence' subheader='21st Aug 2020' action={<IconButton aria-label='settings'><MoreVertIcon/></IconButton>}/>\n                                <Card className={classes.employeeCard}>\n                                    <Avatar alt='dev1' src={person1} className={classes.cardAvatar}/>\n                                    <Typography variant='h5' className={classes.personName}>Alton Ong</Typography>\n                                    <Box className={classes.attendenceButtons}>\n                                        <Button className={classes.individualButton}>\n                                            <DoneAllOutlinedIcon fontSize='large'/>\n                                        </Button>\n                                        <Button className={classes.individualButton}>\n                                            <ClearIcon  fontSize='large'/>\n                                        </Button>\n                                    </Box>               \n                                </Card>                          \n                                <Box className={classes.counter}>\n                                    <Typography variant='h6'>Total working today: 10</Typography>\n                                    <Typography>Total absent today: 10</Typography>\n                                    <Typography>Total missing: 10</Typography> \n                                    <Button className={classes.addTeamMemberButton}>Add Team Member <AddCircleIcon className={classes.addTeamMemberButtonIcon}/></Button>                \n                                </Box>    \n                                \n                                \n                            </Card>\n                        </Grid>\n                        \n                    </Grid>                          \n                </Box>\n            </>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = state => {\n    return {\n      count: state\n    };\n  };\n\n  const mapDispatchToProps = dispatch => {\n    return {\n        //This function will be avaliable through this property therefore whenever this property is executed then this dispatch is also gonna be executed\n        onIncrementCounter: () => dispatch({type: actionTypes.INCREMENT}), \n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Intranet);\n"]},"metadata":{},"sourceType":"module"}
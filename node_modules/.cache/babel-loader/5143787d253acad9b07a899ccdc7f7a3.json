{"ast":null,"code":"var _jsxFileName = \"/Users/altonong/Desktop/Codes/react-app/Stomble_internproj/src/components/intranet/Intranet.js\";\nimport React, { useState } from 'react';\nimport { Box, Grid, Card, CardActionArea, CardHeader, CardActions, CardContent, CardMedia, Button, Typography, List, ListItem, Divider, ListItemText, ListItemAvatar, Avatar, TextField, IconButton } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Navbar from '../navbar/navbar';\nimport Typed from 'react-typed';\nimport DoneAllOutlinedIcon from '@material-ui/icons/DoneAllOutlined';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport person1 from './avatar/robbie.png';\nimport { connect } from 'react-redux';\nimport * as actionTypes from './store/redux/types';\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    backgroundColor: '#ecf0f1',\n    height: '100%',\n    paddingTop: '2rem',\n    color: '#34495e'\n  },\n  headerContainer: {\n    textAlign: 'center',\n    backgroundColor: '#fa923f',\n    color: 'white',\n    padding: '0.5rem 0'\n  },\n  header: {\n    fontSize: '2.3rem'\n  },\n  mainContent: {\n    height: '100%',\n    marginLeft: '1rem'\n  },\n  teamContainer: {\n    margin: '1rem 2rem'\n  },\n  inline: {\n    display: 'inline'\n  },\n  mainContainer2: {\n    backgroundColor: 'white'\n  },\n  cardContainer: {\n    margin: '3rem auto'\n  },\n  employeeCard: {\n    display: 'inline-flex',\n    width: '100%',\n    padding: '1rem',\n    backgroundColor: '#ecf0f1',\n    color: '#34495e',\n    marginBottom: '1rem'\n  },\n  cardAvatar: {\n    width: theme.spacing(6),\n    height: theme.spacing(6)\n  },\n  personName: {\n    marginTop: '0.4rem',\n    marginLeft: '1.5rem'\n  },\n  attendenceButtons: {\n    marginLeft: 'auto',\n    marginTop: '0.4rem',\n    marginRight: '1rem'\n  },\n  individualButton: {\n    marginRight: '1rem',\n    '&:active': {\n      backgroundColor: '#2ecc71',\n      color: 'white'\n    }\n  },\n  counter: {\n    marginLeft: '1rem'\n  },\n  addTeamMemberButton: {\n    margin: '1rem 0.5rem',\n    '&:hover': {\n      backgroundColor: '#34495e',\n      color: 'white'\n    }\n  },\n  addTeamMemberButtonIcon: {\n    marginLeft: '1rem'\n  }\n}));\nconst InputField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'tomato'\n    },\n    '& label': {\n      color: 'tan'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'tan'\n      },\n      '&:hover fieldset': {\n        borderColor: 'tan'\n      },\n      '& .Mui-focused fieldset': {\n        borderColor: 'tan'\n      }\n    }\n  }\n})(TextField);\n\nconst Intranet = props => {\n  const classes = useStyles();\n  const initialState = {\n    people: [{\n      name: 'Alton',\n      attendence: true\n    }, {\n      name: 'Gladys',\n      attendence: true\n    }]\n  }; // const handleNameInput = (initialState) => {\n  // } \n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    count: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    //This function will be avaliable through this property therefore whenever this property is executed then this dispatch is also gonna be executed\n    onIncrementCounter: () => dispatch({\n      type: actionTypes.INCREMENT\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Intranet);","map":{"version":3,"sources":["/Users/altonong/Desktop/Codes/react-app/Stomble_internproj/src/components/intranet/Intranet.js"],"names":["React","useState","Box","Grid","Card","CardActionArea","CardHeader","CardActions","CardContent","CardMedia","Button","Typography","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","TextField","IconButton","makeStyles","withStyles","SendIcon","ClearIcon","MoreVertIcon","Navbar","Typed","DoneAllOutlinedIcon","AddCircleIcon","person1","connect","actionTypes","useStyles","theme","mainContainer","backgroundColor","height","paddingTop","color","headerContainer","textAlign","padding","header","fontSize","mainContent","marginLeft","teamContainer","margin","inline","display","mainContainer2","cardContainer","employeeCard","width","marginBottom","cardAvatar","spacing","personName","marginTop","attendenceButtons","marginRight","individualButton","counter","addTeamMemberButton","addTeamMemberButtonIcon","InputField","root","borderColor","Intranet","props","classes","initialState","people","name","attendence","mapStateToProps","state","count","mapDispatchToProps","dispatch","onIncrementCounter","type","INCREMENT"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Box, Grid, Card, CardActionArea, CardHeader, CardActions, CardContent, CardMedia, Button, Typography, List, ListItem, Divider, ListItemText, ListItemAvatar, Avatar, TextField, IconButton} from '@material-ui/core' \nimport {makeStyles, withStyles} from '@material-ui/core/styles'\nimport SendIcon from '@material-ui/icons/Send';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport Navbar from '../navbar/navbar'\nimport Typed  from 'react-typed';\nimport DoneAllOutlinedIcon from '@material-ui/icons/DoneAllOutlined';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport person1 from './avatar/robbie.png'\nimport { connect } from 'react-redux';\nimport * as actionTypes from './store/redux/types'\n\n\nconst useStyles = makeStyles((theme) => ({\n    mainContainer: {\n        backgroundColor: '#ecf0f1',\n        height: '100%',\n        paddingTop: '2rem',\n        color: '#34495e'\n    },\n    headerContainer: {\n        textAlign: 'center',\n        backgroundColor: '#fa923f',\n        color: 'white',\n        padding: '0.5rem 0'\n    },\n    header: {\n        fontSize: '2.3rem'\n    },\n    mainContent: {\n        height: '100%',\n        marginLeft: '1rem'\n    },\n    teamContainer: {\n        margin: '1rem 2rem'\n    },\n    inline: {\n        display: 'inline'\n    },\n    mainContainer2: {\n        backgroundColor: 'white'\n    },\n    cardContainer: {\n        margin: '3rem auto'\n    },\n    employeeCard: {\n        display: 'inline-flex',\n        width: '100%',\n        padding: '1rem',\n        backgroundColor: '#ecf0f1',\n        color: '#34495e',\n        marginBottom: '1rem'\n        \n    },\n    cardAvatar: {\n        width: theme.spacing(6),\n        height: theme.spacing(6)\n    },\n    personName: {\n        marginTop: '0.4rem',\n        marginLeft: '1.5rem'\n    },\n    attendenceButtons: {\n        marginLeft: 'auto',\n        marginTop: '0.4rem',\n        marginRight: '1rem',\n        \n    },\n    individualButton: {\n        marginRight: '1rem',\n        '&:active': {\n            backgroundColor: '#2ecc71',\n            color:'white'\n        }\n    },\n    counter: {\n        marginLeft: '1rem'\n    },\n    addTeamMemberButton: {\n        margin: '1rem 0.5rem',\n        '&:hover': {\n            backgroundColor: '#34495e',\n            color: 'white'\n        }\n    },\n    addTeamMemberButtonIcon: {\n        marginLeft: '1rem'\n    }\n}))\nconst InputField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'tomato',\n        },\n        '& label': {\n            color: 'tan'\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: 'tan'\n            },\n            '&:hover fieldset': {\n                borderColor: 'tan'\n            },\n            '& .Mui-focused fieldset': {\n                borderColor: 'tan'\n            }\n        },\n    },\n})(TextField);\n\n\n\n\nconst Intranet = (props) => {\n    const classes = useStyles();\n    const initialState= {\n        people: [\n            {\n                name: 'Alton',\n                attendence: true\n            },\n            {\n                name: 'Gladys',\n                attendence: true\n            },\n        ]\n    }\n    // const handleNameInput = (initialState) => {\n\n    // } \n    return (\n        <>\n            <Navbar/>\n                {/* <Box component='header' className={classes.headerContainer}>\n                    <Typography className={classes.header}>\n                        <Typed strings={['Welcome to the Team Manager!', 'Find out everything to do today!']} typeSpeed={40} backSpeed={60} loop/>\n                    </Typography>\n                </Box>\n            <Box component='div' className={classes.mainContainer}>\n                <Grid container justify='center'>\n                    <Grid item lg={5}>\n                        <Card className={classes.cardContainer}>\n                            <CardHeader title='Team 1 Attendence' subheader='21st Aug 2020' action={<IconButton aria-label='settings'><MoreVertIcon/></IconButton>}/>\n                            <Card className={classes.employeeCard}>\n                                <Avatar alt='dev1' src={person1} className={classes.cardAvatar}/>\n    <Typography variant='h5' className={classes.personName}>{Object.keys(initialState).map(peopleKey => {\n\n    })\n    })}</Typography>\n                                <Box className={classes.attendenceButtons}>\n                                    <Button className={classes.individualButton}>\n                                        <DoneAllOutlinedIcon fontSize='large'/>\n                                    </Button>\n                                    <Button className={classes.individualButton}>\n                                        <ClearIcon  fontSize='large'/>\n                                    </Button>\n                                </Box>               \n                            </Card>                          \n                            <Box className={classes.counter}>\n                                <Typography variant='h6'>Total working today: 10</Typography>\n                                <Typography>Total absent today: 10</Typography>\n                                <Typography>Total missing: 10</Typography> \n                                <Button className={classes.addTeamMemberButton}>Add Team Member <AddCircleIcon className={classes.addTeamMemberButtonIcon}/></Button>   \n                                <InputField label='Name' fullWidth={true} variant='outlined' margin='dense' size='medium' inputProps={{style: {color: 'white'}}}/>             \n                            </Box>    \n                            \n                            \n                        </Card>\n                    </Grid>\n                    \n                </Grid>                          \n            </Box> */}\n        </>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n      count: state\n    };\n  };\n\n  const mapDispatchToProps = dispatch => {\n    return {\n        //This function will be avaliable through this property therefore whenever this property is executed then this dispatch is also gonna be executed\n        onIncrementCounter: () => dispatch({type: actionTypes.INCREMENT}), \n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Intranet);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/altonong/Desktop/Codes/react-app/src/components/projects/cards/algoCard.js\";\n//This is completely hard coded, should create project objects that passes in the repetitive details like steps project name. This program was intended to \n//be the portfolio where I can easily add new or upcoming projects to this site through inputs.\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Divider } from '@material-ui/core';\nconst useStyles = makeStyles({\n  dividerStyle: {\n    marginBottom: '1rem',\n    marginTop: '1rem'\n  },\n  headerStyles: {\n    fontSize: '1.3rem'\n  },\n  paragraphStyles: {\n    marginBottom: '1rem'\n  }\n});\n\nconst AlgoProjectCard = () => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"G20 Text Analysis\"), /*#__PURE__*/React.createElement(CardMedia, {\n    src: \"/imgs/fabio-oyXis2kALVg-unsplash\",\n    title: \"g20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.dividerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    className: classes.paragraphStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"What was this project about?\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.paragraphStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"This was an extremely interesting project that involved the use of Python's amazing Pandas framework. The goal of this project was to analyse what was going on during the G20 world summit. It was easy and very possible to to get the general idea of the topics that were discussed by reading one or two news articles but how about thousands of articles? This is where it gets intersting...\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.paragraphStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Steps we took:\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"1. Call API to collect news articles from new outlets.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), \"2. Store and sort all the collected data to a Pandas framework.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), \"3. Sorted and filtered unnecessary data\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), \"3. Extracted each word from each article and appended to an array\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), \"4. Removed all duplicate and unnecessary words\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), \"5. Generated word cloud with the most common \\\"topic\\\" words\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), \"6. Sentiment analysis on every word reported\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), \"7. Plot with matplot.lib the overall compound score\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Learn More\")));\n};\n\nexport default AlgoProjectCard;","map":{"version":3,"sources":["/Users/altonong/Desktop/Codes/react-app/src/components/projects/cards/algoCard.js"],"names":["React","makeStyles","Card","CardActions","CardContent","Button","Typography","CardMedia","Divider","useStyles","dividerStyle","marginBottom","marginTop","headerStyles","fontSize","paragraphStyles","AlgoProjectCard","classes"],"mappings":"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","sourcesContent":["//This is completely hard coded, should create project objects that passes in the repetitive details like steps project name. This program was intended to \n//be the portfolio where I can easily add new or upcoming projects to this site through inputs.\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia'\nimport {Divider} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    dividerStyle: {\n        marginBottom: '1rem',\n        marginTop: '1rem'\n    },\n    headerStyles: {\n        fontSize: '1.3rem'\n    },\n    paragraphStyles: {\n        marginBottom: '1rem'\n    }\n  });\n  \nconst AlgoProjectCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n            <Typography variant=\"h4\">\n                G20 Text Analysis\n            </Typography>\n            <CardMedia src=\"/imgs/fabio-oyXis2kALVg-unsplash\" title=\"g20\"/>\n            <Divider className={classes.dividerStyle}/>\n            <Typography variant=\"h4\" component=\"h2\" className={classes.paragraphStyles}>\n                What was this project about?\n            </Typography>\n            <Typography className ={classes.paragraphStyles}>\n                This was an extremely interesting project that involved the use of Python's amazing Pandas framework. The goal of this project was to \n                analyse what was going on during the G20 world summit. It was easy and very possible to to get the general idea of the topics that were \n                discussed by reading one or two news articles but how about thousands of articles? This is where it gets intersting...\n            </Typography>\n            <Typography variant=\"h4\" className = {classes.paragraphStyles}>\n                Steps we took:\n            </Typography>\n            <Typography variant=\"h6\">\n                1. Call API to collect news articles from new outlets.\n                <br/>\n                <br/>\n                2. Store and sort all the collected data to a Pandas framework.\n                <br/>\n                <br/>\n                3. Sorted and filtered unnecessary data\n                <br/>\n                <br/>\n                3. Extracted each word from each article and appended to an array\n                <br/>\n                <br/>\n                4. Removed all duplicate and unnecessary words\n                <br/>\n                <br/>\n                5. Generated word cloud with the most common \"topic\" words\n                <br/>\n                <br/>\n                6. Sentiment analysis on every word reported\n                <br/>\n                <br/>\n                7. Plot with matplot.lib the overall compound score\n                <br/>\n                <br/>\n            </Typography>\n            <Typography>\n                \n            </Typography>\n            </CardContent>\n            <CardActions>\n            <Button size=\"small\">Learn More</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default AlgoProjectCard;"]},"metadata":{},"sourceType":"module"}
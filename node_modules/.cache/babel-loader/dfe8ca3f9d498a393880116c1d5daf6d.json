{"ast":null,"code":"var _jsxFileName = \"/Users/altonong/Desktop/Codes/react-app/Stomble_internproj/src/components/intranet/listBuilder.js\";\nimport React, { Component } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Card, Avatar, Box, Typography } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DoneAllOutlinedIcon from '@material-ui/icons/DoneAllOutlined';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport person1 from './avatar/robbie.png';\n\nconst styles = theme => ({\n  addTeamMemberButton: {\n    margin: '1rem 0.5rem',\n    '&:hover': {\n      backgroundColor: '#34495e',\n      color: 'white'\n    }\n  },\n  addTeamMemberButtonIcon: {\n    marginLeft: '1rem'\n  }\n});\n\nconst InputField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'tomato'\n    },\n    '& label': {\n      color: 'tan'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'tan'\n      },\n      '&:hover fieldset': {\n        borderColor: 'tan'\n      },\n      '& .Mui-focused fieldset': {\n        borderColor: 'tan'\n      }\n    }\n  }\n})(TextField);\n\nclass ListBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      names: ['Alton', 'Gladys']\n    };\n  }\n\n  addPerson() {\n    this.setState({\n      names: [...this.state.names, ' ']\n    });\n  }\n\n  handleChange(e, index) {\n    this.state.names[index] = e.target.value;\n    this.setState({\n      names: this.state.names\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Names list\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, this.state.names.map((person, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n        key: index,\n        className: classes.employeeCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        alt: \"dev1\",\n        src: person1,\n        className: classes.cardAvatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h5\",\n        className: classes.personName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, person), /*#__PURE__*/React.createElement(Box, {\n        className: classes.attendenceButtons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: classes.individualButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(DoneAllOutlinedIcon, {\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: classes.individualButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(ClearIcon, {\n        fontSize: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(\"input\", {\n        value: person,\n        onChange: e => this.handleChange(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.addPerson(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Add person\")));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(ListBuilder);","map":{"version":3,"sources":["/Users/altonong/Desktop/Codes/react-app/Stomble_internproj/src/components/intranet/listBuilder.js"],"names":["React","Component","withStyles","makeStyles","TextField","Button","Card","Avatar","Box","Typography","AddCircleIcon","DoneAllOutlinedIcon","ClearIcon","person1","styles","theme","addTeamMemberButton","margin","backgroundColor","color","addTeamMemberButtonIcon","marginLeft","InputField","root","borderColor","ListBuilder","state","names","addPerson","setState","handleChange","e","index","target","value","render","classes","props","map","person","employeeCard","cardAvatar","personName","attendenceButtons","individualButton","withTheme"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\nimport {TextField, Button, Card, Avatar, Box, Typography} from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DoneAllOutlinedIcon from '@material-ui/icons/DoneAllOutlined';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport person1 from './avatar/robbie.png'\n\n\n\nconst styles = theme => ({\n    addTeamMemberButton: {\n        margin: '1rem 0.5rem',\n        '&:hover': {\n            backgroundColor: '#34495e',\n            color: 'white'\n        }\n    },\n    addTeamMemberButtonIcon: {\n        marginLeft: '1rem'\n    }\n});\n\nconst InputField = withStyles({\n    root: {\n        '& label.Mui-focused': {\n            color: 'tomato',\n        },\n        '& label': {\n            color: 'tan'\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: 'tan'\n            },\n            '&:hover fieldset': {\n                borderColor: 'tan'\n            },\n            '& .Mui-focused fieldset': {\n                borderColor: 'tan'\n            }\n        },\n    },\n})(TextField);\n\nclass ListBuilder extends Component {\n    state= {\n        names: ['Alton', 'Gladys']\n    }\n    \n    addPerson() {\n        this.setState({names: [...this.state.names, ' ']})\n    }\n    handleChange(e, index) {\n        this.state.names[index] = e.target.value\n        this.setState({names: this.state.names})\n    }\n    render() {\n        const {classes} = this.props\n        return (\n            <div>\n                <h1>Names list</h1>\n                <ul>\n                    {this.state.names.map((person, index)=> {\n                        return(\n                            <>\n                            <Card key={index} className={classes.employeeCard}>\n                                <Avatar alt='dev1' src={person1} className={classes.cardAvatar}/>\n                        <Typography variant='h5' className={classes.personName}>{person}</Typography>\n                                <Box className={classes.attendenceButtons}>\n                                    <Button className={classes.individualButton}>\n                                        <DoneAllOutlinedIcon fontSize='large'/>\n                                    </Button>\n                                    <Button className={classes.individualButton}>\n                                        <ClearIcon  fontSize='large'/>\n                                    </Button>\n                                </Box>   \n                                <input value={person} onChange={(e) => this.handleChange(e, index)}></input>             \n                            </Card>                   \n                            </>        \n                        ) \n                    })}\n                    <button onClick={(e) => this.addPerson(e)}>Add person</button>\n                </ul>\n            </div>\n        )\n    }\n}\nexport default withStyles(styles, {withTheme: true})(ListBuilder);"]},"metadata":{},"sourceType":"module"}